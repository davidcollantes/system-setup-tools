#! /bin/bash
#
# Copyright Â© 2001 - 2012 Denis Salmanovich denis.salmanovich@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#


[ -f /etc/denix-colors ] && . /etc/denix-colors

# Check if script runs under root
#if ! [ "$(whoami)" = "root" ]; then
#    echo "You have to run me with root user priveleges!"
#    exit 1
#fi

# Ask for network device
while [ "${IFACE}" = "" ]; do
    FOUND_IFACE=`ifconfig -a | sed 's/[ \t].*//;/^\(lo\|\)$/d' | head -1`
    $color_Cyan
    echo -n "What is your primary network interface [${FOUND_IFACE}]?"; read IFACE
    $color_Off
    if [ "${IFACE}" = "" ]; then
	IFACE="${FOUND_IFACE}"
    fi
    if ! ifconfig ${IFACE} >/dev/null 2>&1; then
	$color_Red
	echo "Error fetching network device: ${IFACE}"
	$color_Off
	IFACE=""
    fi
    if ifconfig ${IFACE} | head -2 | tail -1 | grep "BROADCAST" >/dev/null 2>&1; then
	$color_Red
	echo "Error fetching IP address for device: ${IFACE}"
	$color_Off
	IFACE=""
    fi
done
INT_IPADDR=`ifconfig ${IFACE} | head -2 | tail -1 | awk '{print $2}' | cut -d":" -f2`

# Ask for virtual hostname 
DOMAINNAME=`hostname`
while [ "${VIRTUALHOST}" = "" ]; do
    echo -n "Enter name for virtualhost [${DOMAINNAME}]: "; read VIRTUALHOST
    if [ "${VIRTUALHOST}" = "" ]; then
	VIRTUALHOST="${DOMAINNAME}"
    fi
done

# Ask for virtual hostname external IP address
VIRTUALHOST_IP=`ping -c1 ${VIRTUALHOST} | head -1 | awk -F"(" '{print $2}' | cut -d")" -f1`
if [ "${VIRTUALHOST_IP}" = "" ]; then
    VIRTUALHOST_IP=${INT_IPADDR}
fi
while [ "${EXT_IPADDR}" = "" ]; do
    echo -n "Enter external IP address of virtualhost [${VIRTUALHOST_IP}]: "; read EXT_IPADDR
    if [ "${EXT_IPADDR}" = "" ]; then
	EXT_IPADDR="${VIRTUALHOST_IP}"
    fi
done

# Ask to add virtualhost user



echo ${VIRTUALHOST}
echo ${EXT_IPADDR}



exit 0

cat > /var/named/masters/internal/${VIRTUALHOST} << EOF
\$ORIGIN .
\$TTL 300	; 5 minutes
${VIRTUALHOST}		IN SOA	ns.${VIRTUALHOST}. hostmaster.${VIRTUALHOST}. (
				1          ; serial
                                300        ; refresh (5 minutes)
                                300        ; retry (5 minutes)
                                300        ; expire (5 minutes)
                                300        ; minimum (5 minutes)
                                )
                        NS      ns.${VIRTUALHOST}.
                        A       ${INT_IPADDR}
                        MX      10 ${VIRTUALHOST}.
\$ORIGIN ${VIRTUALHOST}.
ns                      A       ${INT_IPADDR}
mail			A	${INT_IPADDR}
www			A	${INT_IPADDR}
EOF
chown named:named /var/named/masters/internal/${VIRTUALHOST}

cat >> /var/named/masters/internal.zones << EOF

zone "${VIRTUALHOST}" IN {
    type master;
    file "masters/internal/${VIRTUALHOST}";
    allow-update { key rndc-key; };
    allow-transfer { none; };
};
EOF

cat > /var/named/masters/external/${VIRTUALHOST} << EOF
\$ORIGIN .
\$TTL 300	; 5 minutes
${VIRTUALHOST}		IN SOA	ns.${VIRTUALHOST}. hostmaster.${VIRTUALHOST}. (
				1          ; serial
                                300        ; refresh (5 minutes)
                                300        ; retry (5 minutes)
                                300        ; expire (5 minutes)
                                300        ; minimum (5 minutes)
                                )
                        NS      ns.${VIRTUALHOST}.
                        A       ${EXT_IPADDR}
                        MX      10 ${VIRTUALHOST}.
\$ORIGIN ${VIRTUALHOST}.
ns                      A       ${EXT_IPADDR}
mail			A	${EXT_IPADDR}
www			A	${EXT_IPADDR}
EOF
chown named:named /var/named/masters/external/${VIRTUALHOST}

cat >> /var/named/masters/external.zones << EOF

zone "${VIRTUALHOST}" IN {
    type master;
    file "masters/external/${VIRTUALHOST}";
    allow-update { key rndc-key; };
    allow-transfer { none; };
};
EOF

# Add virtual host configuration to apache
cat >> /etc/httpd/conf.d/vhosts.conf << EOF

<VirtualHost *:80>
    DocumentRoot /home/vulf.lt/.public_html
    ServerPath /.public_html
    ServerName ${VIRTUALHOST}
    ServerAlias ${VIRTUALHOST}
    ServerAlias www.${VIRTUALHOST}
</VirtualHost>
EOF

# Restart services after changes
service named restart
service httpd restart
